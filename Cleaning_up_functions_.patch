Index: Drawer.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Drawer.py	(revision 6b4d1b4309d14c21fe163e439bca34175f2b56e8)
+++ Drawer.py	(revision )
@@ -1,8 +1,13 @@
 import pygame
 from Colors import colors
+
 screen = pygame.display.set_mode((800,600))
 pygame.init()
 
+clock = pygame.time.Clock()
+pygame.mouse.set_visible(0)
+
+
 done = False
 size_x = 60
 size_y = 60
@@ -11,34 +16,66 @@
 color = colors["Red"]
 
 
+screen.fill(colors["White"])
 
+pygame.display.flip()
+
 def draw_rect():
+    print('draw_rect')
     pygame.draw.rect(screen, color, (x_pos,y_pos,size_x,size_y))
 
-def move_rect():
+
+def borders():
+    print('borders')
     global x_pos
     global y_pos
 
-    if(pygame.key.get_pressed()[pygame.K_w]):
-                y_pos += 3
-    if(pygame.key.get_pressed()[pygame.K_s]):
-                y_pos -= 3
-    if(pygame.key.get_pressed()[pygame.K_d]):
+    if x_pos > 790:
+         x_pos -= 3
+    if x_pos < 10:
-                x_pos += 3
+         x_pos += 3
-    if(pygame.key.get_pressed()[pygame.K_a]):
+    if y_pos > 590:
+         y_pos -= 3
+    if y_pos < 10:
+         y_pos += 3
+
+def move_rect():
+    print('move_rect')
+    global x_pos
+    global y_pos
+    global done
+
+    for event in pygame.event.get():
+
+        if event.type == pygame.KEYDOWN and event.key == pygame.K_a:
-                x_pos -= 3
+            x_pos -= 3
+        if event.type == pygame.KEYDOWN and event.key == pygame.K_d:
+            x_pos += 3
+        if event.type == pygame.KEYDOWN and event.key == pygame.K_w:
+            y_pos -= 3
+        if event.type == pygame.KEYDOWN and event.key == pygame.K_s:
+            y_pos += 3
+        borders()
+        draw_rect()
+        pygame.display.update()
 
 
+def check_for_quit():
+    print('check_for_quit')
+    global done
+    for event in pygame.event.get():
+        if event.type == pygame.QUIT:
+            done = True
+            pygame.QUIT()
 
 
 def main():
-    while not done:
-        draw_rect()
-        pygame.display.update()
+    print('main')
+    check_for_quit()
-        move_rect()
+    move_rect()
 
-screen.fill(colors["White"])
 
 while not done:
+    print('loop')
     main()
-    pygame.display.flip()
\ No newline at end of file
+    pygame.display.update()
